name: 🚀 Release

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [dev]

permissions:
  contents: read
  deployments: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 💾 Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-${{ matrix.bun }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.bun }}-bun-

      - name: 🥟 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install

      - name: 🧹 Lint code
        run: bun run lint

      - name: 🕸️ Check dependencies
        run: bun run madge

      - name: 🔍 Type check
        run: bun run typecheck

      - name: 🚀 Deploy Worker-1 to Cloudflare
        id: deploy-worker-1
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy
          workingDirectory: apps/worker-1

      - name: 🚀 Deploy Worker-2 to Cloudflare
        id: deploy-worker-2
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: deploy
          workingDirectory: apps/worker-2

      - name: 📢 Send deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const worker1Status = '${{ steps.deploy-worker-1.outcome }}' === 'success';
            const worker2Status = '${{ steps.deploy-worker-2.outcome }}' === 'success';
            const status = worker1Status && worker2Status ? 'success' : 'failure';
            const message = status === 'failure' 
              ? '❌ Worker-WebSocket-DO-DO deployment failed' 
              : '🚀 Worker-WebSocket-DO-DO has been released successfully';

            await fetch("${{ secrets.DISCORD_DEPLOY_WEBHOOK }}", {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                content: message
              })
            });
